{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["operations","App","useState","rows","i","push","Array","from","grid","setGrid","running","setRunning","runningRef","useRef","current","runSimulation","useCallback","produce","gridCopy","j","neighbors","forEach","x","y","newI","newJ","setTimeout","Container","fluid","style","marginTop","Row","Col","xxl","lg","textAlign","marginBottom","paddingLeft","paddingRight","paddingTop","paddingBottom","fontSize","fontWeight","color","borderRadius","backgroundColor","alignSelf","minWidth","borderColor","onClick","alert","className","display","gridTemplateColumns","map","col","newGrid","width","height","undefined","border","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9fa37b3.chunk.js","sourcesContent":["import React, { useState, useCallback, useRef } from 'react';\nimport produce from 'immer';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n\nconst nRows = 40;\nconst nColumns = 50;\n\nconst operations = [\n\t// like a clock, starting at 12\n\t[0, -1], // up\n\t[1, -1], // up right\n\t[1, 0], // right\n\t[1, 1], // down right\n\t[0, 1], // down\n\t[-1, 1], // down left\n\t[-1, 0], // left\n\t[-1, -1], // up left\n]\n\nconst App: React.FC = () => {\n\tconst [grid, setGrid] = useState(() => {\n\t\tconst rows = [];\n\t\tfor (let i = 0; i < nRows; i++) {\n\t\t\trows.push(Array.from(Array(nColumns), () => 0));\n\t\t}\n\n\t\treturn rows;\n\t});\n\n\tconst [running, setRunning] = useState(false)\n\n\tconst runningRef = useRef(running);\n\trunningRef.current = running;\n\n\tconst runSimulation = useCallback(() => {\n\t\tif (!runningRef.current) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetGrid(grid => {\n\t\t\treturn produce(grid, gridCopy => {\n\t\t\t\tfor (let i = 0; i < nRows; i++) {\n\t\t\t\t\tfor (let j = 0; j < nColumns; j++) {\n\t\t\t\t\t\tlet neighbors = 0;\n\t\t\t\t\t\toperations.forEach(([x, y]) => {\n\t\t\t\t\t\t\tconst newI = i + x;\n\t\t\t\t\t\t\tconst newJ = j + y;\n\t\t\t\t\t\t\tif (newI >= 0 && newI < nRows && newJ >= 0 && newJ < nColumns) {\n\t\t\t\t\t\t\t\tneighbors += grid[newI][newJ] ? 1 : 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (neighbors < 2 || neighbors > 3) {\n\t\t\t\t\t\t\tgridCopy[i][j] = 0;\n\t\t\t\t\t\t} else if (grid[i][j] === 0 && neighbors === 3) {\n\t\t\t\t\t\t\tgridCopy[i][j] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tsetTimeout(runSimulation, 75);\n\t}, []);\n\n\treturn <Container fluid\n\t\tstyle={{\n\t\t\tmarginTop: '2%'\n\t\t}}>\n\t\t<Row>\n\t\t\t<Col xxl={3} lg={12} style={{ textAlign: 'center', marginBottom: 100 }}>\n\t\t\t\t<h2 style={{ marginBottom: 100 }}>Conway's Game of Life</h2>\n\t\t\t\t<button\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tpaddingLeft: 35,\n\t\t\t\t\t\tpaddingRight: 35,\n\t\t\t\t\t\tpaddingTop: 12,\n\t\t\t\t\t\tpaddingBottom: 12,\n\t\t\t\t\t\tfontSize: 18,\n\t\t\t\t\t\tfontWeight: 800,\n\t\t\t\t\t\tcolor: running ? 'coral' : 'oldlace',\n\t\t\t\t\t\tborderRadius: 5,\n\t\t\t\t\t\tbackgroundColor: running ? 'cornsilk' : 'coral',\n\t\t\t\t\t\talignSelf: 'center',\n\t\t\t\t\t\tmarginBottom: 6,\n\t\t\t\t\t\tminWidth: '48%',\n\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\tborderColor: 'white'\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetRunning(!running);\n\t\t\t\t\t\tif (!running) {\n\t\t\t\t\t\t\trunningRef.current = true;\n\t\t\t\t\t\t\trunSimulation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}}> {running ? 'Stop Sim' : 'Run Sim'} </button>\n\t\t\t\t\t<button\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tpaddingLeft: 35,\n\t\t\t\t\t\tpaddingRight: 35,\n\t\t\t\t\t\tpaddingTop: 12,\n\t\t\t\t\t\tpaddingBottom: 12,\n\t\t\t\t\t\tfontSize: 18,\n\t\t\t\t\t\tfontWeight: 800,\n\t\t\t\t\t\tcolor: 'oldlace',\n\t\t\t\t\t\tborderRadius: 5,\n\t\t\t\t\t\tbackgroundColor:  'coral',\n\t\t\t\t\t\talignSelf: 'center',\n\t\t\t\t\t\tmarginBottom: 6,\n\t\t\t\t\t\tminWidth: '48%',\n\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\tborderColor: 'white'\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={() => alert(`I didn't spend a sec working on responsivity, and I work on a big screen (1920x1080 24\").\\nIf you can't see things properly, I'm sorry.`)}> my dude I can't see shit </button>\n\t\t\t</Col>\n\n\t\t\t<Col xxl={9} lg={12} className=\"d-flex justify-content-around\">\n\t\t\t\t<div style={{\n\t\t\t\t\tdisplay: 'grid',\n\t\t\t\t\tgridTemplateColumns: `repeat(${nColumns}, 20px)`\n\t\t\t\t}}>\n\t\t\t\t\t{grid.map((rows, i) => rows.map((col, j) => <div\n\t\t\t\t\t\tkey={`${i}-${j}`}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tconst newGrid = produce(grid, gridCopy => {\n\t\t\t\t\t\t\t\tgridCopy[i][j] = grid[i][j] === 1 ? 0 : 1;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tsetGrid(newGrid)\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: 20,\n\t\t\t\t\t\t\theight: 20,\n\t\t\t\t\t\t\tbackgroundColor: grid[i][j] ? 'coral' : undefined,\n\t\t\t\t\t\t\tborder: 'solid 1px #979797'\n\t\t\t\t\t\t}} />)\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</Col>\n\t\t</Row>\n\t\t\n\t\t<Row>\n\t\t\t<p style={{ textAlign: 'center', marginTop: 50}}>Made with React and React-Bootstrap</p>\n\t\t</Row>\n\t</Container>;\n\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}